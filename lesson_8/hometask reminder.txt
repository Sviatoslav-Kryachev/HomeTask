сообщение https://discordapp.com/channels/691962563298066503/943761546704715816/1027994056296505415

https://i.imgur.com/nFH7IX1.png
https://i.imgur.com/EQ02gIp.png


В этом задании хорошо отрабатываются комбинаторы) В данной работе ~ или +, в зависимости от того, что вы предпочитаете) 
Представим, что у нас есть такая разметка 
<div class="start"></div>
<div class="line-1"></div>
<div class="line-2"></div>
<!-- Другое дивы -->
<div class="line-n"></div>
 Стили этим линиям вы сможете прописать, а теперь давайте к логике игры)

Такой этап размышления.
1) Сделать, чтобы все линии были невидимы и нельзя было с ними взаимодействовать
[class^="line"]{
  visibility: hidden;
}
 Тут я выбрал подход через visibility, т.к. это свойство блокирует возможность взаимодействия с элементом, пока его нет, но не дергает его, как при display: none; 

2) Сделать, чтобы при наведении на старт появлялась первая линия
.start:hover + .line-1{
  visibility: visible;
}
 В этом подходе используем комбинатор +, который выбирает следующий элемент;

3) Оставить эту линию видимой, когда мы на нее наводим. Это свойство не будет работать, если мы на нее наведем, пока ее нет из-за свойства visibility (описал про это в п.1)
.line-1:hover{
  visibility: visible;
}

4) Объединяем 
.start:hover + .line-1,
.line-1:hover{
  visibility: visible;
}

5) Дальше по такой же схеме 
.start:hover + .line-1,
.line-1:hover,
.line-1:hover + .line-2,
.line-2:hover{
  visibility: visible;
}
 Можно оптимизировать (увидел такое решение в домашках и оно очень понравилось)
.start:hover + .line-1,
[class*="line-"]:hover,
[class*="line-"]:hover + * {
  visibility: visible;  